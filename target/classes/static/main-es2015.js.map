{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_helpers/auth.guard.ts","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/fake-backend.ts","./src/app/_helpers/index.ts","./src/app/_helpers/jwt.interceptor.ts","./src/app/_services/authentication.service.ts","./src/app/_services/index.ts","./src/app/_services/user.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/attendance/attendance.component.ts","./src/app/attendance/attendance.component.html","./src/app/export-students/export-students.component.ts","./src/app/export-students/export-students.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/index.ts","./src/app/login/index.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/service/student-service.service.ts","./src/app/upload-students/upload-students.component.ts","./src/app/upload-students/upload-students.component.html","./src/app/user-list/user-list.component.ts","./src/app/user-list/user-list.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthenticationService } from '../_services';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      // authorised so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}}).then(r => false);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\n\n\n\n\n\nlet users = JSON.parse(localStorage.getItem('users')) || [];\n\n\n\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const { url, method, headers, body } = request;\n\n        // wrap in delayed observable to simulate server api call\n        return of(null)\n            .pipe(mergeMap(handleRoute))\n          // tslint:disable-next-line:max-line-length\n            .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n            .pipe(delay(500))\n            .pipe(dematerialize());\n\n        function handleRoute() {\n        switch (true) {\n          case url.endsWith('/users/authenticate') && method === 'POST':\n            return authenticate();\n          case url.endsWith('/users/register') && method === 'POST':\n            return register();\n          default:\n            // pass through any requests not handled above\n            return next.handle(request);\n        }\n      }\n\n\n      // route functions\n\n        function authenticate() {\n            const { username, password } = body;\n            const user = users.find(x => x.username === username && x.password === password);\n            if (!user) { return error('Username or password is incorrect'); }\n            return ok(\n              {\n                id: user.id,\n                username: user.username,\n                firstName: user.firstName,\n                lastName: user.lastName,\n                token: 'fake-jwt-token'\n            });\n        }\n\n\n        function register() {\n        const user = body\n\n        if (users.find(x => x.username === user.username)) {\n          return error('Username \"' + user.username + '\" is already taken')\n        }\n\n        user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\n        users.push(user);\n        localStorage.setItem('users', JSON.stringify(users));\n\n        return ok();\n      }\n        // helper functions\n\n      // tslint:disable-next-line:no-shadowed-variable\n        function ok(body?) {\n            return of(new HttpResponse({ status: 200, body }));\n        }\n\n        function error(message) {\n            return throwError({ error: { message } });\n        }\n    }\n}\n\nexport const fakeBackendProvider = {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n};\n","export * from './fake-backend';\nexport * from './auth.guard';\nexport * from './jwt.interceptor';\nexport * from './error.interceptor';\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '../_services';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser && currentUser.token) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${currentUser.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n    private currentUserSubject: BehaviorSubject<any>;\n    public currentUser: Observable<any>;\n\n    constructor(private http: HttpClient) {\n        this.currentUserSubject = new BehaviorSubject<any>(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    public get currentUserValue() {\n        return this.currentUserSubject.value;\n    }\n\n    login(username, password) {\n        return this.http.post<any>(`/users/authenticate`, { username, password })\n            .pipe(map(user => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('currentUser', JSON.stringify(user));\n                this.currentUserSubject.next(user);\n                return user;\n            }));\n    }\n\n    logout() {\n        // remove user from local storage and set current user to null\n        localStorage.removeItem('currentUser');\n        this.currentUserSubject.next(null);\n    }\n}\n","export * from './authentication.service';\nexport * from './user.service';\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {config} from 'rxjs';\n\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n    // @ts-ignore\n\n    return this.http.get<any[]>(`${config.apiUrl}/users`);\n  }\n\n  register(user) {\n    // @ts-ignore\n\n    return this.http.post(`${config.apiUrl}/users/register`, user);\n  }\n\n  delete(id) {\n    // @ts-ignore\n    return this.http.delete(`${config.apiUrl}/users/${id}`);\n  }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './_services';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n\n  title: string;\n  currentUser: any;\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n\n  ) {\n\n    this.title = 'Paperless Attendance';\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n\n  }\n  logout() {\n    this.authenticationService.logout();\n    this.router.navigate(['/login']);\n  }\n\n}\n\n\n","<!-- nav -->\n<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"currentUser\">\n  <div class=\"navbar-nav\">\n    <a class=\"nav-item nav-link\" routerLink=\"/home\">Home</a>\n    <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n  </div>\n</nav>\n\n<!-- main content container -->\n<div class=\"jumbotron\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm-8 offset-sm-2\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRouting } from './app.routing';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { StudentServiceService } from './service/student-service.service';\nimport { UploadStudentsComponent } from './upload-students/upload-students.component';\nimport { ExportStudentsComponent } from './export-students/export-students.component';\nimport { LoginComponent } from './login';\nimport {ErrorInterceptor, fakeBackendProvider, JwtInterceptor} from './_helpers';\nimport {HomeComponent} from './home';\nimport {RegisterComponent} from './register/register.component';\nimport {AttendanceComponent} from './attendance/attendance.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserListComponent,\n    UploadStudentsComponent,\n    ExportStudentsComponent,\n    LoginComponent,\n    HomeComponent,\n    RegisterComponent,\n    AttendanceComponent,\n\n\n\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRouting,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n\n    StudentServiceService,\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n\n    fakeBackendProvider ],\n\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UploadStudentsComponent } from './upload-students/upload-students.component';\nimport { ExportStudentsComponent } from './export-students/export-students.component';\nimport { LoginComponent } from './login';\nimport { HomeComponent } from './home';\nimport { AuthGuard } from './_helpers';\nimport {RegisterComponent} from './register/register.component';\nimport {AttendanceComponent} from './attendance/attendance.component';\n\n\nconst routes: Routes = [\n\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'users', component: UserListComponent, canActivate: [AuthGuard] },\n  { path: 'uploadstudents', component: UploadStudentsComponent, canActivate: [AuthGuard]},\n  { path: 'exportstudents', component: ExportStudentsComponent, canActivate: [AuthGuard]},\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path:  'attendance', component: AttendanceComponent},\n\n\n\n  { path: '**', redirectTo: 'home' }\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRouting { }\nexport const appRoutingModule = RouterModule.forRoot(routes);\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  templateUrl: './attendance.component.html',\n})\nexport class AttendanceComponent implements OnInit {\n\n  constructor() {\n  }\n\n\n  ngOnInit(): void {\n    window.open('http://localhost:8080/attendance');\n  }\n\n  onClick() {\n    const grades = [];\n\n    while (true) {\n      const input = prompt('Input PantherID');\n      if (input === 'q' || input === null) {\n        break;\n      }\n      grades.push(Number(input));\n      console.log(grades);\n    }\n\n  }\n\n}\n","<button onclick=\"onClick()\">Click me</button>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-export-students',\n  templateUrl: './export-students.component.html',\n  styleUrls: ['./export-students.component.css']\n})\nexport class ExportStudentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    window.open('http://localhost:8080/exportstudents')\n  }\n\n}\n","<p>\n    Students have successfully been exported to .CSV.\n</p>","import { Component } from '@angular/core';\n\n@Component({ templateUrl: 'home.component.html' })\nexport class HomeComponent {}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card bg-dark my-5\">\n                <div class=\"card-body\">\n                    <h2 class=\"card-title text-center text-white py-3\">{{ 'Home' }}</h2>\n                    <ul class=\"text-center list-inline py-2\">\n                        <li class=\"list-inline-item\">\n                            <a routerLink=\"/users\" class=\"btn btn-info\">View Students</a>\n                        </li>\n                        <li class=\"list-inline-item\">\n                            <a routerLink=\"/uploadstudents\" class=\"btn btn-info\">Upload Students</a>\n                        </li>\n                      <li class=\"list-inline-item\">\n                        <a routerLink=\"/attendance\" class=\"btn btn-info\">Take Attendance</a>\n                      </li>\n                    </ul>\n                </div>\n            </div>\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n","export * from './home.component';\n","export * from './login.component';\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\n\nimport { AuthenticationService } from '../_services';\n\n@Component({templateUrl: 'login.component.html'})\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    error: string;\n  success: string;\n\n\n  constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/home']);\n        }\n    }\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams[this.returnUrl] || '/home';\n\n        // show success message on registration\n        if (this.route.snapshot.queryParams.registered) {\n        this.success = 'Registration successful';\n      }\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n      // reset alerts on submit\n        this.error = null;\n        this.success = null;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    this.error = error;\n                    this.loading = false;\n                });\n    }\n}\n\n","<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\n<div *ngIf=\"success\" class=\"alert alert-success\">{{success}}</div>\n<h2>Paperless Attendance</h2>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-group\">\n    <label for=\"username\">Username</label>\n    <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.username.errors.required\">Username is required</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.password.errors.required\">Password is required</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <button [disabled]=\"loading\" class=\"btn btn-primary\">\n      <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n      Login\n    </button>\n    <a routerLink=\"/register\" class=\"btn btn-link\">Register</a>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { UserService, AuthenticationService } from '../_services';\n\n@Component({ templateUrl: 'register.component.html' })\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  error: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private userService: UserService\n  ) {\n    // redirect to home if already logged in\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.userService.register(this.registerForm.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.router.navigate(['/login'], { queryParams: { registered: true }});\n        },\n        error => {\n          this.error = error;\n          this.loading = false;\n        });\n  }\n}\n","<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\n<h2>Register</h2>\n<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-group\">\n    <label for=\"firstName\">First Name</label>\n    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n    <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"lastName\">Last Name</label>\n    <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n    <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"username\">Username</label>\n    <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.username.errors.required\">Username is required</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.password.errors.required\">Password is required</div>\n      <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <button [disabled]=\"loading\" class=\"btn btn-primary\">\n      <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n      Register\n    </button>\n    <a routerLink=\"/login\" class=\"btn btn-link\">Cancel</a>\n  </div>\n</form>\n","import { Injectable} from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport { Student } from '../model/student';\nimport { Observable } from 'rxjs';\n \n@Injectable()\nexport class StudentServiceService {\n \n  private studentsUserUrl: string;\n  private studentsExportUrl: string;\n \n  constructor(private http: HttpClient) {\n    this.studentsUserUrl = 'http://localhost:8080/users';\n    this.studentsExportUrl = 'http://localhost:8080/exportstudents';\n  }\n \n  public findAll(): Observable<Student[]> {\n    return this.http.get<Student[]>(this.studentsUserUrl);\n  }\n \n  public save(student: Student) {\n    return this.http.post<Student>(this.studentsUserUrl, student);\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { StudentServiceService } from '../service/student-service.service';\nimport { Student } from '../model/student';\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse} from '@angular/common/http';\nimport {Router} from \"@angular/router\"\n\n@Component({\n  selector: 'app-upload-students',\n  templateUrl: './upload-students.component.html',\n  styleUrls: ['./upload-students.component.css']\n})\nexport class UploadStudentsComponent implements OnInit {\n  fileToUpload: File = null;\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  handleFileInput(files: FileList) {\n    this.fileToUpload = files.item(0);\n  }\n\n  submitFile(): void {\n    let formData = new FormData();\n    formData.append('file', this.fileToUpload); // Append file to formdata\n    this.http.post('/uploadstudents', formData, {\n      headers: new HttpHeaders()\n    }).subscribe(\n      data => {\n        this.router.navigate(['/users', {uploadSuccess: 'true' }]);\n      },\n      err => {\n        this.router.navigate(['/users',  {uploadFailure: 'true' }]);\n      }\n    );\n  }\n}\n","<div class=\"container\">\n\n  <div align=\"center\">\n    <h2 class=\"card-title text-center text-black py-2\">Upload Students</h2>\n    <br>\n  </div>\n    <ul class=\"text-center list-inline py-2\">\n      <form method=\"POST\" action=\"/uploadstudents\" enctype=\"multipart/form-data\">\n        <li class=\"list-inline-item\">\n            <input type=\"file\" id=\"file\" accept=\".csv\" class=\"btn btn-info\" (change)=\"handleFileInput($event.target.files)\"/>\n        </li>\n        <li class=\"list-inline-item\">\n        <button (click)=\"submitFile()\" type=\"submit\" [disabled]=\"!fileToUpload\"\n                  class=\"btn btn-info\">Upload File</button>\n        </li>\n      </form>\n    </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Student } from '../model/student';\nimport { StudentServiceService } from '../service/student-service.service';\nimport {Router} from '@angular/router';\nimport {ActivatedRoute} from '@angular/router';\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  students: Student[];\n  showSuccessMsg = false;\n  showErrorMsg = false;\n\n  constructor(private studentService: StudentServiceService, private router: Router, private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    console.log(this.route);\n\n    if (this.route.snapshot.params.uploadSuccess !== undefined && this.route.snapshot.params.uploadSuccess === 'true') {\n      this.showSuccessMsg = true;\n      this.showErrorMsg = false;\n    }\n\n    if (this.route.snapshot.params.uploadFailure !== undefined && this.route.snapshot.params.uploadFailure === 'true') {\n      this.showErrorMsg = true;\n      this.showSuccessMsg = false;\n    }\n\n    this.studentService.findAll().subscribe(data => {\n      this.students = data;\n    });\n  }\n}\n","<div align=\"center\">\n  <h2 class=\"card-title text-center text-black py-2\">Student List</h2>\n</div>\n<div align=\"center\" *ngIf=\"showSuccessMsg\">\n  <div class=\"col-xs-12\">\n    <p class=\"alert alert-success\">\n        <strong>Successfully uploaded!</strong> You can now view added students in the list below. To add more students, go to \"Update Students\" and submit a new file.\n    </p>\n  </div>\n</div>\n<div align=\"center\" *ngIf=\"showErrorMsg\">\n  <div class=\"col-xs-12\">\n    <p class=\"alert alert-danger\">\n        <strong>Could not upload students!</strong> Please try again by going to \"Update Students\" and resubmitting the file.\n    </p>\n  </div>\n</div>\n<div class=\"card my-5\">\n  <div class=\"card-body\">\n    <table class=\"table table-bordered table-striped\">\n      <thead class=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">Panther ID</th>\n          <th scope=\"col\">First Name</th>\n          <th scope=\"col\">Last Name</th>\n          <th scope=\"col\">Email</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let student of students\">\n          <td>{{ student.pantherID }}</td>\n          <td>{{ student.studentFirstName }}</td>\n          <td>{{ student.studentLastName }}</td>\n          <td><a href=\"mailto:{{ student.studentEmail }}\">{{ student.studentEmail }}</a></td>\n        </tr>\n      </tbody>\n    </table>\n    <a routerLink=\"/exportstudents\" class=\"btn btn-info\">Export Students</a>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}