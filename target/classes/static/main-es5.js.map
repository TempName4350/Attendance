{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_helpers/fake-backend.ts","webpack:///src/app/_helpers/index.ts","webpack:///src/app/_helpers/jwt.interceptor.ts","webpack:///src/app/_services/authentication.service.ts","webpack:///src/app/_services/index.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/attendance/attendance.component.ts","webpack:///src/app/attendance/attendance.component.html","webpack:///src/app/export-students/export-students.component.ts","webpack:///src/app/export-students/export-students.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/index.ts","webpack:///src/app/login/index.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/service/student-service.service.ts","webpack:///src/app/upload-students/upload-students.component.ts","webpack:///src/app/upload-students/upload-students.component.html","webpack:///src/app/user-list/user-list.component.ts","webpack:///src/app/user-list/user-list.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","router","authenticationService","route","state","currentUser","currentUserValue","navigate","queryParams","returnUrl","url","r","providedIn","ErrorInterceptor","request","next","handle","pipe","err","status","logout","location","reload","error","message","statusText","users","JSON","parse","localStorage","getItem","FakeBackendInterceptor","method","headers","body","handleRoute","endsWith","authenticate","register","username","password","user","find","x","ok","firstName","lastName","token","length","Math","max","map","push","setItem","stringify","fakeBackendProvider","provide","useClass","multi","JwtInterceptor","clone","setHeaders","Authorization","AuthenticationService","http","currentUserSubject","asObservable","post","removeItem","value","UserService","get","apiUrl","delete","AppComponent","title","subscribe","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","routes","path","component","canActivate","redirectTo","AppRouting","forRoot","appRoutingModule","AttendanceComponent","window","open","grades","input","prompt","Number","console","log","ExportStudentsComponent","HomeComponent","LoginComponent","formBuilder","loading","submitted","loginForm","group","required","snapshot","registered","success","invalid","login","f","data","controls","onSubmit","RegisterComponent","userService","registerForm","minLength","StudentServiceService","studentsUserUrl","studentsExportUrl","student","UploadStudentsComponent","fileToUpload","files","item","formData","FormData","append","uploadSuccess","uploadFailure","handleFileInput","submitFile","UserListComponent","studentService","showSuccessMsg","showErrorMsg","params","undefined","findAll","students","environment","production","bootstrapModule","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthenticationService } from '../_services';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const currentUser = this.authenticationService.currentUserValue;\n    if (currentUser) {\n      // authorised so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}}).then(r => false);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '../_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401) {\n                // auto logout if 401 response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }));\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\n\n\n\n\n\nlet users = JSON.parse(localStorage.getItem('users')) || [];\n\n\n\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const { url, method, headers, body } = request;\n\n        // wrap in delayed observable to simulate server api call\n        return of(null)\n            .pipe(mergeMap(handleRoute))\n          // tslint:disable-next-line:max-line-length\n            .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n            .pipe(delay(500))\n            .pipe(dematerialize());\n\n        function handleRoute() {\n        switch (true) {\n          case url.endsWith('/users/authenticate') && method === 'POST':\n            return authenticate();\n          case url.endsWith('/users/register') && method === 'POST':\n            return register();\n          default:\n            // pass through any requests not handled above\n            return next.handle(request);\n        }\n      }\n\n\n      // route functions\n\n        function authenticate() {\n            const { username, password } = body;\n            const user = users.find(x => x.username === username && x.password === password);\n            if (!user) { return error('Username or password is incorrect'); }\n            return ok(\n              {\n                id: user.id,\n                username: user.username,\n                firstName: user.firstName,\n                lastName: user.lastName,\n                token: 'fake-jwt-token'\n            });\n        }\n\n\n        function register() {\n        const user = body\n\n        if (users.find(x => x.username === user.username)) {\n          return error('Username \"' + user.username + '\" is already taken')\n        }\n\n        user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\n        users.push(user);\n        localStorage.setItem('users', JSON.stringify(users));\n\n        return ok();\n      }\n        // helper functions\n\n      // tslint:disable-next-line:no-shadowed-variable\n        function ok(body?) {\n            return of(new HttpResponse({ status: 200, body }));\n        }\n\n        function error(message) {\n            return throwError({ error: { message } });\n        }\n    }\n}\n\nexport const fakeBackendProvider = {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n};\n","export * from './fake-backend';\nexport * from './auth.guard';\nexport * from './jwt.interceptor';\nexport * from './error.interceptor';\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '../_services';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser && currentUser.token) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${currentUser.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n    private currentUserSubject: BehaviorSubject<any>;\n    public currentUser: Observable<any>;\n\n    constructor(private http: HttpClient) {\n        this.currentUserSubject = new BehaviorSubject<any>(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    public get currentUserValue() {\n        return this.currentUserSubject.value;\n    }\n\n    login(username, password) {\n        return this.http.post<any>(`/users/authenticate`, { username, password })\n            .pipe(map(user => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('currentUser', JSON.stringify(user));\n                this.currentUserSubject.next(user);\n                return user;\n            }));\n    }\n\n    logout() {\n        // remove user from local storage and set current user to null\n        localStorage.removeItem('currentUser');\n        this.currentUserSubject.next(null);\n    }\n}\n","export * from './authentication.service';\nexport * from './user.service';\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport {config} from 'rxjs';\n\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n  constructor(private http: HttpClient) { }\n\n  getAll() {\n    // @ts-ignore\n\n    return this.http.get<any[]>(`${config.apiUrl}/users`);\n  }\n\n  register(user) {\n    // @ts-ignore\n\n    return this.http.post(`${config.apiUrl}/users/register`, user);\n  }\n\n  delete(id) {\n    // @ts-ignore\n    return this.http.delete(`${config.apiUrl}/users/${id}`);\n  }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './_services';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n\n  title: string;\n  currentUser: any;\n\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n\n  ) {\n\n    this.title = 'Paperless Attendance';\n    this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n\n  }\n  logout() {\n    this.authenticationService.logout();\n    this.router.navigate(['/login']);\n  }\n\n}\n\n\n","<!-- nav -->\n<nav class=\"navbar navbar-expand navbar-dark bg-dark\" *ngIf=\"currentUser\">\n  <div class=\"navbar-nav\">\n    <a class=\"nav-item nav-link\" routerLink=\"/home\">Home</a>\n    <a class=\"nav-item nav-link\" (click)=\"logout()\">Logout</a>\n  </div>\n</nav>\n\n<!-- main content container -->\n<div class=\"jumbotron\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-sm-8 offset-sm-2\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRouting } from './app.routing';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { StudentServiceService } from './service/student-service.service';\nimport { UploadStudentsComponent } from './upload-students/upload-students.component';\nimport { ExportStudentsComponent } from './export-students/export-students.component';\nimport { LoginComponent } from './login';\nimport {ErrorInterceptor, fakeBackendProvider, JwtInterceptor} from './_helpers';\nimport {HomeComponent} from './home';\nimport {RegisterComponent} from './register/register.component';\nimport {AttendanceComponent} from './attendance/attendance.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserListComponent,\n    UploadStudentsComponent,\n    ExportStudentsComponent,\n    LoginComponent,\n    HomeComponent,\n    RegisterComponent,\n    AttendanceComponent,\n\n\n\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRouting,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n\n    StudentServiceService,\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n\n    fakeBackendProvider ],\n\n\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { UploadStudentsComponent } from './upload-students/upload-students.component';\nimport { ExportStudentsComponent } from './export-students/export-students.component';\nimport { LoginComponent } from './login';\nimport { HomeComponent } from './home';\nimport { AuthGuard } from './_helpers';\nimport {RegisterComponent} from './register/register.component';\nimport {AttendanceComponent} from './attendance/attendance.component';\n\n\nconst routes: Routes = [\n\n  { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },\n  { path: 'users', component: UserListComponent, canActivate: [AuthGuard] },\n  { path: 'uploadstudents', component: UploadStudentsComponent, canActivate: [AuthGuard]},\n  { path: 'exportstudents', component: ExportStudentsComponent, canActivate: [AuthGuard]},\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path:  'attendance', component: AttendanceComponent},\n\n\n\n  { path: '**', redirectTo: 'home' }\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRouting { }\nexport const appRoutingModule = RouterModule.forRoot(routes);\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  templateUrl: './attendance.component.html',\n})\nexport class AttendanceComponent implements OnInit {\n\n  constructor() {\n  }\n\n\n  ngOnInit(): void {\n    window.open('http://localhost:8080/attendance');\n  }\n\n  onClick() {\n    const grades = [];\n\n    while (true) {\n      const input = prompt('Input PantherID');\n      if (input === 'q' || input === null) {\n        break;\n      }\n      grades.push(Number(input));\n      console.log(grades);\n    }\n\n  }\n\n}\n","<button onclick=\"onClick()\">Click me</button>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-export-students',\n  templateUrl: './export-students.component.html',\n  styleUrls: ['./export-students.component.css']\n})\nexport class ExportStudentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    window.open('http://localhost:8080/exportstudents')\n  }\n\n}\n","<p>\n    Students have successfully been exported to .CSV.\n</p>","import { Component } from '@angular/core';\n\n@Component({ templateUrl: 'home.component.html' })\nexport class HomeComponent {}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <div class=\"card bg-dark my-5\">\n                <div class=\"card-body\">\n                    <h2 class=\"card-title text-center text-white py-3\">{{ 'Home' }}</h2>\n                    <ul class=\"text-center list-inline py-2\">\n                        <li class=\"list-inline-item\">\n                            <a routerLink=\"/users\" class=\"btn btn-info\">View Students</a>\n                        </li>\n                        <li class=\"list-inline-item\">\n                            <a routerLink=\"/uploadstudents\" class=\"btn btn-info\">Upload Students</a>\n                        </li>\n                      <li class=\"list-inline-item\">\n                        <a routerLink=\"/attendance\" class=\"btn btn-info\">Take Attendance</a>\n                      </li>\n                    </ul>\n                </div>\n            </div>\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n","export * from './home.component';\n","export * from './login.component';\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\n\nimport { AuthenticationService } from '../_services';\n\n@Component({templateUrl: 'login.component.html'})\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    error: string;\n  success: string;\n\n\n  constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/home']);\n        }\n    }\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams[this.returnUrl] || '/home';\n\n        // show success message on registration\n        if (this.route.snapshot.queryParams.registered) {\n        this.success = 'Registration successful';\n      }\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n      // reset alerts on submit\n        this.error = null;\n        this.success = null;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    this.error = error;\n                    this.loading = false;\n                });\n    }\n}\n\n","<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\n<div *ngIf=\"success\" class=\"alert alert-success\">{{success}}</div>\n<h2>Paperless Attendance</h2>\n<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-group\">\n    <label for=\"username\">Username</label>\n    <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.username.errors.required\">Username is required</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.password.errors.required\">Password is required</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <button [disabled]=\"loading\" class=\"btn btn-primary\">\n      <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n      Login\n    </button>\n    <a routerLink=\"/register\" class=\"btn btn-link\">Register</a>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { UserService, AuthenticationService } from '../_services';\n\n@Component({ templateUrl: 'register.component.html' })\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  error: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private userService: UserService\n  ) {\n    // redirect to home if already logged in\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.userService.register(this.registerForm.value)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.router.navigate(['/login'], { queryParams: { registered: true }});\n        },\n        error => {\n          this.error = error;\n          this.loading = false;\n        });\n  }\n}\n","<div *ngIf=\"error\" class=\"alert alert-danger\">{{error}}</div>\n<h2>Register</h2>\n<form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-group\">\n    <label for=\"firstName\">First Name</label>\n    <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n    <div *ngIf=\"submitted && f.firstName.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.firstName.errors.required\">First Name is required</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"lastName\">Last Name</label>\n    <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n    <div *ngIf=\"submitted && f.lastName.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.lastName.errors.required\">Last Name is required</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"username\">Username</label>\n    <input type=\"text\" formControlName=\"username\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n    <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.username.errors.required\">Username is required</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"password\">Password</label>\n    <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n    <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n      <div *ngIf=\"f.password.errors.required\">Password is required</div>\n      <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <button [disabled]=\"loading\" class=\"btn btn-primary\">\n      <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n      Register\n    </button>\n    <a routerLink=\"/login\" class=\"btn btn-link\">Cancel</a>\n  </div>\n</form>\n","import { Injectable} from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport { Student } from '../model/student';\nimport { Observable } from 'rxjs';\n \n@Injectable()\nexport class StudentServiceService {\n \n  private studentsUserUrl: string;\n  private studentsExportUrl: string;\n \n  constructor(private http: HttpClient) {\n    this.studentsUserUrl = 'http://localhost:8080/users';\n    this.studentsExportUrl = 'http://localhost:8080/exportstudents';\n  }\n \n  public findAll(): Observable<Student[]> {\n    return this.http.get<Student[]>(this.studentsUserUrl);\n  }\n \n  public save(student: Student) {\n    return this.http.post<Student>(this.studentsUserUrl, student);\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { StudentServiceService } from '../service/student-service.service';\nimport { Student } from '../model/student';\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse} from '@angular/common/http';\nimport {Router} from \"@angular/router\"\n\n@Component({\n  selector: 'app-upload-students',\n  templateUrl: './upload-students.component.html',\n  styleUrls: ['./upload-students.component.css']\n})\nexport class UploadStudentsComponent implements OnInit {\n  fileToUpload: File = null;\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  handleFileInput(files: FileList) {\n    this.fileToUpload = files.item(0);\n  }\n\n  submitFile(): void {\n    let formData = new FormData();\n    formData.append('file', this.fileToUpload); // Append file to formdata\n    this.http.post('/uploadstudents', formData, {\n      headers: new HttpHeaders()\n    }).subscribe(\n      data => {\n        this.router.navigate(['/users', {uploadSuccess: 'true' }]);\n      },\n      err => {\n        this.router.navigate(['/users',  {uploadFailure: 'true' }]);\n      }\n    );\n  }\n}\n","<div class=\"container\">\n\n  <div align=\"center\">\n    <h2 class=\"card-title text-center text-black py-2\">Upload Students</h2>\n    <br>\n  </div>\n    <ul class=\"text-center list-inline py-2\">\n      <form method=\"POST\" action=\"/uploadstudents\" enctype=\"multipart/form-data\">\n        <li class=\"list-inline-item\">\n            <input type=\"file\" id=\"file\" accept=\".csv\" class=\"btn btn-info\" (change)=\"handleFileInput($event.target.files)\"/>\n        </li>\n        <li class=\"list-inline-item\">\n        <button (click)=\"submitFile()\" type=\"submit\" [disabled]=\"!fileToUpload\"\n                  class=\"btn btn-info\">Upload File</button>\n        </li>\n      </form>\n    </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Student } from '../model/student';\nimport { StudentServiceService } from '../service/student-service.service';\nimport {Router} from '@angular/router';\nimport {ActivatedRoute} from '@angular/router';\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n\n  students: Student[];\n  showSuccessMsg = false;\n  showErrorMsg = false;\n\n  constructor(private studentService: StudentServiceService, private router: Router, private route: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    console.log(this.route);\n\n    if (this.route.snapshot.params.uploadSuccess !== undefined && this.route.snapshot.params.uploadSuccess === 'true') {\n      this.showSuccessMsg = true;\n      this.showErrorMsg = false;\n    }\n\n    if (this.route.snapshot.params.uploadFailure !== undefined && this.route.snapshot.params.uploadFailure === 'true') {\n      this.showErrorMsg = true;\n      this.showSuccessMsg = false;\n    }\n\n    this.studentService.findAll().subscribe(data => {\n      this.students = data;\n    });\n  }\n}\n","<div align=\"center\">\n  <h2 class=\"card-title text-center text-black py-2\">Student List</h2>\n</div>\n<div align=\"center\" *ngIf=\"showSuccessMsg\">\n  <div class=\"col-xs-12\">\n    <p class=\"alert alert-success\">\n        <strong>Successfully uploaded!</strong> You can now view added students in the list below. To add more students, go to \"Update Students\" and submit a new file.\n    </p>\n  </div>\n</div>\n<div align=\"center\" *ngIf=\"showErrorMsg\">\n  <div class=\"col-xs-12\">\n    <p class=\"alert alert-danger\">\n        <strong>Could not upload students!</strong> Please try again by going to \"Update Students\" and resubmitting the file.\n    </p>\n  </div>\n</div>\n<div class=\"card my-5\">\n  <div class=\"card-body\">\n    <table class=\"table table-bordered table-striped\">\n      <thead class=\"thead-dark\">\n        <tr>\n          <th scope=\"col\">Panther ID</th>\n          <th scope=\"col\">First Name</th>\n          <th scope=\"col\">Last Name</th>\n          <th scope=\"col\">Email</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let student of students\">\n          <td>{{ student.pantherID }}</td>\n          <td>{{ student.studentFirstName }}</td>\n          <td>{{ student.studentLastName }}</td>\n          <td><a href=\"mailto:{{ student.studentEmail }}\">{{ student.studentEmail }}</a></td>\n        </tr>\n      </tbody>\n    </table>\n    <a routerLink=\"/exportstudents\" class=\"btn btn-info\">Export Students</a>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}